## Overwrites default values of Bitnami's Node.js chart. 
## Referenced in Jitsi's tokenauthurl. Utilizes Keycloak to provide Jitsi with JWTs.
authentication:
  extraEnvVars: 
    - name: CLIENT_ID
      value: "jitsi-meet-emotion"
    - name: SECRET
      value: "gUxcfAaaUD1ffkHvHIR13UTgpFCFyea2"
    - name: BASE_URL
      value: "https://auth.local"
    - name: ISSUER_BASE_URL
      value: "http://mykeycloak/realms/jitsi-emotion" # Assumes Keycloak's service name is mykeycloak
    - name: JITSI_PUB_URL
      value: "https://jitsi.local"
    - name: JITSI_SECRET
      value: "254uni5DFCY25hvb233bjHJBm6l34j5hb43hb3Fuy23ebwuyfMDWft2"
    - name: JITSI_SUBJECT
      value: "jitsi-meet-emotion"
  mongodb:
    enabled: false
  image:
    repository: erge234/auth
    tag: helm
    pullPolicy: Always
  getAppFromExternalRepository: false
  ingress:
    enabled: true
    hostname: auth.local
    annotations: {kubernetes.io/ingress.class: nginx}

## Overwrites default values of Bitnami's Node.js chart. 
## Used to run socket.IO. Sits between browsers running Jitsi and backend services.
emotionbackend:
  extraEnvVars:
  - name: ENABLE_REDIS_WORKER
    value: "true"
  - name: ENABLE_CELERY_WORKER
    value: "false"
  - name: ENABLE_BENTOML_WORKER
    value: "false"
  - name: REDIS_CHART_NAME 
    value: "redis-cluster" # Service name of Redis.
  - name: CELERY_BROKER_URL
    value: "amqp://admin:mypass@rabbitmq-service:5672"
  - name: CELERY_RESULT_BACKEND
    value: "redis://myredis-headless:6379/0"
  - name: YATAI_DEPLOYMENT_URL
    value: "http://emotion-analyzer.yatai.svc.cluster.local:3000/predict_async"
  mongodb:
    enabled: false
  image:
    repository: erge234/socket_emotion
    tag: gateway
    pullPolicy: Always
  containerPorts:
    http: 8010
  getAppFromExternalRepository: false
  ingress:
    enabled: true
    hostname: emotionbackend
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    tls: true
    selfSigned: true

## Overwrites default values of Bitnami's Grafana chart.
## TODO revisit, since it has only been used in the context of a single master redis.
grafana:
  enabled: false
  plugins: "redis-app,redis-datasource,volkovlabs-image-panel"
  dashboardsProvider:
    enabled: true
  dashboardsConfigMaps:
    - configMapName: redis-camera
      fileName: camera.json
  datasources:
    secretDefinition:
      apiVersion: 1
      datasources:
        - name: Redis
          type: redis-datasource
          access: proxy
          orgId: 1
          isDefault: true
          version: 1
          url: redis://myredis-headless:6379 # Assumes Redis' service name is myredis.
          editable: true
  grafana:
    extraEnvVars:
      - name: GF_AUTH_ANONYMOUS_ENABLED
        value: "true"
      - name: GF_AUTH_ANONYMOUS_ORG_ROLE
        value: Admin
      - name: GF_AUTH_BASIC_ENABLED
        value: "false"

## Overwrites default values of the community supported 3rd party Jitsi chart. 
jitsi:
  enableAuth: true
  enableGuests: false
  publicURL: "https://jitsi.local"
  web:
    image:
      repository: erge234/web # Is configured to connect to https://emotionbackend 
      tag: stable-6865-emotion
      pullPolicy: Always
    extraEnvs: {TOKEN_AUTH_URL: "https://auth.local/room/{room}"}
    ingress:
      enabled: true
      annotations: {kubernetes.io/ingress.class: nginx}
      tls: 
      - secretName: jitsi-web-certificate
        hosts:
          - jitsi.local
  jvb:
    UDPPort: 30000
    publicIP: 192.168.2.52 # Your node's public ip. 
    service:
      type: NodePort
    websockets:
      enabled: true
  extraCommonEnvs: {
    AUTH_TYPE: jwt,
    JWT_APP_ID: jitsi-meet-emotion,
    JWT_APP_SECRET: 254uni5DFCY25hvb233bjHJBm6l34j5hb43hb3Fuy23ebwuyfMDWft2,
    JWT_ACCEPTED_ISSUERS: jitsi,
    JWT_ACCEPTED_AUDIENCES: jitsi,
    XMPP_CROSS_DOMAIN: "true" ,}

## Overwrites default values of Bitnami's Redis-Cluster chart. 
## Uses an image equipped with RedisAI and Redis Gears module.
redis-cluster:
  fullnameOverride: "redis-cluster" # Service name of Redis.
  image:
    repository: erge234/redis-cluster
    tag: 6.2-debian-11
  usePassword: false
  redis:
    configmap: |+
      loadmodule /usr/lib/redis/modules/redistimeseries.so
      loadmodule /usr/lib/redis/modules/redisai.so
      loadmodule /usr/lib/redis/modules/redisgears.so Plugin /var/opt/redislabs/modules/rg/plugin/gears_python.so
  cluster:
    nodes: 3
    replicas: 0

## Loads AI models and Redis Gears after chart installation. 
redisAIProvider:
  image: 
    repository: erge234/redis-ai-client
    pullPolicy: Always

## Overwrites default values of Bitnami's Keycloak chart. 
keycloak:
  fullnameOverride: "mykeycloak" # Service name of Keycloak.
  auth:
    adminUser: admin
    adminPassword: "admin"
  service:
    type: ClusterIP
  ingress:
    enabled: true
    hostname: mykeycloak
    annotations: {kubernetes.io/ingress.class: nginx}
  keycloakConfigCli:
    enabled: true
    existingConfigmap: "keycloak-config-cli-configmap"
  postgresql:
    auth:
      password: "admin"

# The configmap referenced in `keycloak.keycloakConfigCli.existingConfigmap`
# keycloak-config-cli realms configuration
# NOTE: nil keys will be considered files to import locally
keycloakConfigCli:
  configuration:
    files/jitsi-emotion.yaml:

